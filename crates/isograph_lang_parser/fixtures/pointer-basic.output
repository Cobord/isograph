Ok(
    [
        (
            ClientPointerDeclaration(
                WithSpan {
                    item: ClientPointerDeclaration {
                        directives: [],
                        const_export_name: ConstExportName(
                            "pointer",
                        ),
                        parent_type: WithSpan {
                            item: UnvalidatedTypeName(
                                "User",
                            ),
                            span: Span {
                                start: 11,
                                end: 15,
                            },
                        },
                        target_type: Named(
                            GraphQLNamedTypeAnnotation(
                                WithSpan {
                                    item: UnvalidatedTypeName(
                                        "User",
                                    ),
                                    span: Span {
                                        start: 30,
                                        end: 34,
                                    },
                                },
                            ),
                        ),
                        client_pointer_name: WithSpan {
                            item: ClientObjectSelectableName(
                                "bestFriend",
                            ),
                            span: Span {
                                start: 16,
                                end: 26,
                            },
                        },
                        description: None,
                        selection_set: [
                            WithSpan {
                                item: Object(
                                    ObjectSelection {
                                        name: WithLocation {
                                            location: Embedded(
                                                EmbeddedLocation {
                                                    text_source: TextSource {
                                                        current_working_directory: CurrentWorkingDirectory,
                                                        relative_path_to_source_file: RelativePathToSourceFile(
                                                            "crates/isograph_lang_parser/fixtures/pointer-basic.input.js",
                                                        ),
                                                        span: Some(
                                                            Span {
                                                                start: 28,
                                                                end: 114,
                                                            },
                                                        ),
                                                    },
                                                    span: Span {
                                                        start: 41,
                                                        end: 48,
                                                    },
                                                },
                                            ),
                                            item: ServerObjectSelectableName(
                                                "friends",
                                            ),
                                        },
                                        reader_alias: None,
                                        associated_data: (),
                                        selection_set: [
                                            WithSpan {
                                                item: Scalar(
                                                    ScalarSelection {
                                                        name: WithLocation {
                                                            location: Embedded(
                                                                EmbeddedLocation {
                                                                    text_source: TextSource {
                                                                        current_working_directory: CurrentWorkingDirectory,
                                                                        relative_path_to_source_file: RelativePathToSourceFile(
                                                                            "crates/isograph_lang_parser/fixtures/pointer-basic.input.js",
                                                                        ),
                                                                        span: Some(
                                                                            Span {
                                                                                start: 28,
                                                                                end: 114,
                                                                            },
                                                                        ),
                                                                    },
                                                                    span: Span {
                                                                        start: 57,
                                                                        end: 59,
                                                                    },
                                                                },
                                                            ),
                                                            item: ScalarSelectableName(
                                                                "id",
                                                            ),
                                                        },
                                                        reader_alias: None,
                                                        associated_data: (),
                                                        arguments: [],
                                                        scalar_selection_directive_set: None(
                                                            EmptyDirectiveSet,
                                                        ),
                                                    },
                                                ),
                                                span: Span {
                                                    start: 57,
                                                    end: 59,
                                                },
                                            },
                                            WithSpan {
                                                item: Scalar(
                                                    ScalarSelection {
                                                        name: WithLocation {
                                                            location: Embedded(
                                                                EmbeddedLocation {
                                                                    text_source: TextSource {
                                                                        current_working_directory: CurrentWorkingDirectory,
                                                                        relative_path_to_source_file: RelativePathToSourceFile(
                                                                            "crates/isograph_lang_parser/fixtures/pointer-basic.input.js",
                                                                        ),
                                                                        span: Some(
                                                                            Span {
                                                                                start: 28,
                                                                                end: 114,
                                                                            },
                                                                        ),
                                                                    },
                                                                    span: Span {
                                                                        start: 66,
                                                                        end: 75,
                                                                    },
                                                                },
                                                            ),
                                                            item: ScalarSelectableName(
                                                                "closeness",
                                                            ),
                                                        },
                                                        reader_alias: None,
                                                        associated_data: (),
                                                        arguments: [],
                                                        scalar_selection_directive_set: None(
                                                            EmptyDirectiveSet,
                                                        ),
                                                    },
                                                ),
                                                span: Span {
                                                    start: 66,
                                                    end: 75,
                                                },
                                            },
                                        ],
                                        arguments: [],
                                        object_selection_directive_set: None(
                                            EmptyDirectiveSet,
                                        ),
                                    },
                                ),
                                span: Span {
                                    start: 41,
                                    end: 81,
                                },
                            },
                        ],
                        variable_definitions: [],
                        definition_path: RelativePathToSourceFile(
                            "crates/isograph_lang_parser/fixtures/pointer-basic.input.js",
                        ),
                        semantic_tokens: [
                            WithSpan {
                                item: IsographSemanticToken(
                                    15,
                                ),
                                span: Span {
                                    start: 3,
                                    end: 10,
                                },
                            },
                            WithSpan {
                                item: IsographSemanticToken(
                                    2,
                                ),
                                span: Span {
                                    start: 11,
                                    end: 15,
                                },
                            },
                            WithSpan {
                                item: IsographSemanticToken(
                                    21,
                                ),
                                span: Span {
                                    start: 15,
                                    end: 16,
                                },
                            },
                            WithSpan {
                                item: IsographSemanticToken(
                                    13,
                                ),
                                span: Span {
                                    start: 16,
                                    end: 26,
                                },
                            },
                            WithSpan {
                                item: IsographSemanticToken(
                                    15,
                                ),
                                span: Span {
                                    start: 27,
                                    end: 29,
                                },
                            },
                            WithSpan {
                                item: IsographSemanticToken(
                                    1,
                                ),
                                span: Span {
                                    start: 30,
                                    end: 34,
                                },
                            },
                            WithSpan {
                                item: IsographSemanticToken(
                                    21,
                                ),
                                span: Span {
                                    start: 35,
                                    end: 36,
                                },
                            },
                            WithSpan {
                                item: IsographSemanticToken(
                                    9,
                                ),
                                span: Span {
                                    start: 41,
                                    end: 48,
                                },
                            },
                            WithSpan {
                                item: IsographSemanticToken(
                                    21,
                                ),
                                span: Span {
                                    start: 49,
                                    end: 50,
                                },
                            },
                            WithSpan {
                                item: IsographSemanticToken(
                                    9,
                                ),
                                span: Span {
                                    start: 57,
                                    end: 59,
                                },
                            },
                            WithSpan {
                                item: IsographSemanticToken(
                                    9,
                                ),
                                span: Span {
                                    start: 66,
                                    end: 75,
                                },
                            },
                            WithSpan {
                                item: IsographSemanticToken(
                                    21,
                                ),
                                span: Span {
                                    start: 80,
                                    end: 81,
                                },
                            },
                            WithSpan {
                                item: IsographSemanticToken(
                                    21,
                                ),
                                span: Span {
                                    start: 84,
                                    end: 85,
                                },
                            },
                        ],
                    },
                    span: Span {
                        start: 11,
                        end: 85,
                    },
                },
            ),
            TextSource {
                current_working_directory: CurrentWorkingDirectory,
                relative_path_to_source_file: RelativePathToSourceFile(
                    "crates/isograph_lang_parser/fixtures/pointer-basic.input.js",
                ),
                span: Some(
                    Span {
                        start: 28,
                        end: 114,
                    },
                ),
            },
        ),
    ],
)